@use "sass:string";
@use "sass:list";

/**
 * Split a string into a list of strings.
 * https://stackoverflow.com/questions/32376461/how-to-split-a-string-into-two-lists-of-numbers-in-sass#answer-42295154
 */
 @function string-split($string, $separator: ", ") {
	$separator-length: string.length($separator);

	// Start with an empty list
	$list: ();

	// Get the index of the first separator
	$index: string.index($string, $separator);

	@while $index != null {
		// Get the string up to the first separator
		$item: string.slice($string, 1, $index - 1);
		// Remove the first value and the separator from the string
		$string: string.slice($string, $index + $separator-length);

		// Append the item to the list
		$list: list.append($list, $item);

		// Update the index
		$index: string.index($string, $separator);
	}

	// Add the remainder of the list
	$list: list.append($list, $string);

	@return $list;
}

/**
 * Converts a list of property name strings to a comma-separated
 * list that can be used as the value of a `transition` property.
 */
@function props-to-transitions($props, $duration, $easing, $delay) {
	$transitions: unquote(list.nth($props, 1)) $duration $easing $delay;

	@if (list.length($props) >= 2) {
		@for $i from 2 through list.length($props) {
			$transitions: $transitions, unquote(list.nth($props, $i)) $duration $easing $delay;
		}
	}

	@return $transitions;
}

@mixin transition($properties: all, $duration: 0.3s, $easing: ease-in-out, $delay: 0s) {
	$props: string-split($properties);
	$transitions: props-to-transitions($props, $duration, $easing, $delay);

	transition: $transitions;

	@media (prefers-reduced-motion: reduce) {
		transition: none;
	}
}