<%##
	locals: {
		directory: Record<string, Policy>,
	}
%>

<%
	const keys = Object.keys(directory).sort();
	const policies = [];
	for (const key of keys) {
		policies.push(directory[key]);
	}

	function needsOCR(policy) {
		for (const version of policy.versions) {
			for (const file of version.files) {
				if (file.accessibility['text-based']?.value === false) {
					return true;
				}

				if (file.alternateFiles) {
					for (const altFile of file.alternateFiles) {
						if (altFile.accessibility['text-based']?.value === false) {
							return true;
						}
					}
				}
			}
		}

		return false;
	}

	function needsA11yRating(policy) {
		for (const version of policy.versions) {
			for (const file of version.files) {
				if (file.accessibility.rating === 'Undetermined') {
					return true;
				}

				if (file.alternateFiles) {
					for (const altFile of file.alternateFiles) {
						if (altFile.accessibility.rating === 'Undetermined') {
							return true;
						}
					}
				}
			}
		}

		return false;
		}
%>

<%- include('../layout/head', { title: 'Content Report' }); %>

<article class="directory">
	<div class="directory__layout">
		<h1 class="directory__title">Content Report</h1>

		<details>
			<summary>Needs OCR</summary>

			<ul class="directory__list">
				<% policies.forEach((policy, idx) => { %>
					<% if (needsOCR(policy)) { %>

					<li class="directory__item">
						<%- include('../components/policy-summary', { policy, key: keys[idx] }); %>
					</li>
					<% } %>
				<% }) %>
			</ul>
		</details>

		<details>
			<summary>Needs Accessibility Rating</summary>

			<ul class="directory__list">
				<% policies.forEach((policy, idx) => { %>
					<% if (needsA11yRating(policy)) { %>

					<li class="directory__item">
						<%- include('../components/policy-summary', { policy, key: keys[idx] }); %>
					</li>
					<% } %>
				<% }) %>
			</ul>
		</details>
	</div>
</article>

<%- include('../layout/foot'); %>
