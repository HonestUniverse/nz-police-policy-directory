<%##
	locals: {
		policy: Policy,
		key: string,
	}
%>

<section class="policy-summary">
	<h2 class="policy-summary__title">
		<a href="<%= key %>" class="policy-summary__link"><%= policy.title %><%= policy.obsolete ? ' (obsolete)' : '' %></a>
	</h2>

	<span class="policy-summary__type"><%= policy.type %></span>
	<%
		const latestVersion = policy.versions[0];
		const mainFile = policy.versions[0].files[0];

		const provenance = mainFile.provenance || latestVersion.provenance;

		// From provenance objects with a `retrieved` date, create an array of retrieved dates and sort it from most recent to oldest
		const retrievedDates = provenance.filter((prov) => prov.retrieved).map((prov) => new Date(prov.retrieved)).sort();
	%>
	<% if (retrievedDates.length) { %>
		<span class="policy-summary__date">Last Updated: <%- include('../helpers/date-partial', { date: retrievedDates[0] }); %></span>
	<% } %>
</section>
