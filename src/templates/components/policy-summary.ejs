<%##
	locals: {
		policy: Policy,
		key: string,
	}
%>

<%
	/**
	 * A policy is a stub if none of its versions have any files
	 */
	function isStub(policy) {
		const hasVersions = policy.versions.length > 0;
		if (!hasVersions) {
			return true;
		}

		const hasFiles = policy.versions.find((version) => version.files.length > 0);
		if (!hasFiles) {
			return true;
		}

		return false;
	}

	// This function is copied in `components/duration.ejs`
	/**
	 * For sorting, treat partial dates as their earliest possible date.
	 */
	 function partialToFullDate(dateObj) {
		if (dateObj instanceof Date) {
			return dateObj;
		} else if (typeof dateObj === 'string') {
			return new Date(dateObj);
		}

		// We'll always have year
		const year = dateObj.year;
		// Use month if available, otherwise first month of the quarter if available, otherwise January
		const month = (dateObj.month || dateObj.quarter * 3 - 2 || 1) - 1;
		// Use date if available, otherwise first day of the month
		const date = dateObj.date || 1;

		return new Date(year, month, date);
	}
%>

<section
	class="policy-summary<%= isStub(policy) ? ' policy-summary--stub' : '' %> js-search__item"
	data-search-name="<%= policy.name %>"
	data-search-type="<%= policy.type %>"
	data-search-stub="<%= isStub(policy) %>"
	<% if (policy.previousNames) {
		const previousNamesList = policy.previousNames ? JSON.stringify(policy.previousNames).replace(/"/g, '&quot;') : null; %>
		data-search-previous-names="<%= previousNamesList %>"
	<% } %>
>
	<h2 class="policy-summary__title">
		<a href="<%= key %>" class="policy-summary__link"><%= policy.name %><%= policy.obsolete ? ' (obsolete)' : '' %></a>
	</h2>

	<% if (policy.previousNames) { %>
		<div class="policy-summary__previous-names">
			<span class="policy-summary__previous-names__title">Previously called</span>
			<ul class="policy-summary__previous-names__list">
				<% for (const name of policy.previousNames) { %>
					<li class="policy-summary__previous-names__item"><%= name %></li>
				<% } %>
			</ul>
		</div>
	<% } %>

	<span class="policy-summary__type"><%= policy.type %></span>

	<% if (isStub(policy)) { %>
		<span class="policy-summary__stub-notice">No files</span>
	<% } else { %>
		<%
			const latestVersion = policy.versions[0];
			const duration = latestVersion.duration;

			// Show the Latest single date we have for the latest version
			if (duration.end) { %>
				<span class="policy-summary__date">Latest version ended: <%- include('../helpers/date-partial', { date: duration.end }); %></span>
			<% } else if (duration.on && duration.on.length >= 1) { %>
				<%
					// Sort `on` dates chronologically
					const onDates = duration.on.sort((a, b) => {
						// Dates in `on` may be partial. For sorting assume they are the earliest date in the region of uncertainty
						const dateA = partialToFullDate(a);
						const dateB = partialToFullDate(b);

						return dateB - dateA;
					});
					const lastOnDate = onDates[0];
				%>
				<span class="policy-summary__date">Latest version active on: <%- include('../helpers/date-partial', { date: lastOnDate }); %></span>
			<% } else if (duration.start) { %>
				<span class="policy-summary__date">Latest version started: <%- include('../helpers/date-partial', { date: duration.start }); %></span>
			<% } else { %>
				<%
					// We don't have any specific duration information, so say when it was published, extracted, released, or retrieved
					const mainFile = latestVersion.files[0];
					const provenance = mainFile?.provenance || latestVersion.provenance;

					function getLatestDate(dateType, provenance) {
						const dates = provenance.filter(
							(prov) => prov[dateType]
						).map(
							(prov) => new Date(prov[dateType])
						).sort(
							(a, b) => b - a
						)

						return dates[0];
					}

					const publishedDate = getLatestDate('published', provenance);
					const extractedDate = getLatestDate('extracted', provenance);
					const releasedDate = getLatestDate('released', provenance);
					const retrievedDate = getLatestDate('retrieved', provenance);
				%>

				<% if (publishedDate) { %>
					<span class="policy-summary__date">Latest information published: <%- include('../helpers/date-partial', { date: publishedDate }); %></span>
				<% } else if (extractedDate) { %>
					<span class="policy-summary__date">Latest information extracted: <%- include('../helpers/date-partial', { date: extractedDate }); %></span>
				<% } else if (releasedDate) { %>
					<span class="policy-summary__date">Latest information released: <%- include('../helpers/date-partial', { date: releasedDate }); %></span>
				<% } else if (retrievedDate) { %>
					<span class="policy-summary__date">Latest information retrieved: <%- include('../helpers/date-partial', { date: retrievedDate }); %></span>
				<% } %>
			<% } %>
	<% } %>
</section>
